{"ast":null,"code":"import api from \"./api\";\nimport TokenService from \"./token.service\";\nclass AuthService {\n  login(username, password) {\n    return api.post(\"/auth/signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        const {\n          accessToken,\n          firstName,\n          lastName,\n          phone\n        } = response.data;\n        TokenService.setUser({\n          accessToken,\n          firstName,\n          lastName,\n          phone\n        });\n      }\n      return response.data;\n    });\n  }\n  logout() {\n    TokenService.removeUser();\n  }\n  register(username, email, password, confirmPassword) {\n    return api.post(\"/auth/signup\", {\n      username,\n      email,\n      password,\n      confirmPassword\n    });\n  }\n  getCurrentUser() {\n    return TokenService.getUser();\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["api","TokenService","AuthService","login","username","password","post","then","response","data","accessToken","firstName","lastName","phone","setUser","logout","removeUser","register","email","confirmPassword","getCurrentUser","getUser"],"sources":["C:/Users/Admin/OneDrive/Рабочий стол/masterFront/republicProject/src/services/auth.service.js"],"sourcesContent":["import api from \"./api\";\r\nimport TokenService from \"./token.service\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return api\r\n      .post(\"/auth/signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          const { accessToken, firstName, lastName, phone } = response.data;\r\n          TokenService.setUser({ accessToken, firstName, lastName, phone });\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    TokenService.removeUser();\r\n  }\r\n\r\n  register(username, email, password, confirmPassword) {\r\n    return api.post(\"/auth/signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n      confirmPassword\r\n    });\r\n  }\r\n  \r\n\r\n  getCurrentUser() {\r\n    return TokenService.getUser();\r\n  }\r\n}\r\n\r\nexport default new AuthService();"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AACvB,OAAOC,YAAY,MAAM,iBAAiB;AAE1C,MAAMC,WAAW,CAAC;EAChBC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACxB,OAAOL,GAAG,CACPM,IAAI,CAAC,cAAc,EAAE;MACpBF,QAAQ;MACRC;IACF,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;QAC7B,MAAM;UAAEA,WAAW;UAAEC,SAAS;UAAEC,QAAQ;UAAEC;QAAM,CAAC,GAAGL,QAAQ,CAACC,IAAI;QACjER,YAAY,CAACa,OAAO,CAAC;UAAEJ,WAAW;UAAEC,SAAS;UAAEC,QAAQ;UAAEC;QAAM,CAAC,CAAC;MACnE;MAEA,OAAOL,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACN;EAEAM,MAAMA,CAAA,EAAG;IACPd,YAAY,CAACe,UAAU,CAAC,CAAC;EAC3B;EAEAC,QAAQA,CAACb,QAAQ,EAAEc,KAAK,EAAEb,QAAQ,EAAEc,eAAe,EAAE;IACnD,OAAOnB,GAAG,CAACM,IAAI,CAAC,cAAc,EAAE;MAC9BF,QAAQ;MACRc,KAAK;MACLb,QAAQ;MACRc;IACF,CAAC,CAAC;EACJ;EAGAC,cAAcA,CAAA,EAAG;IACf,OAAOnB,YAAY,CAACoB,OAAO,CAAC,CAAC;EAC/B;AACF;AAEA,eAAe,IAAInB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}