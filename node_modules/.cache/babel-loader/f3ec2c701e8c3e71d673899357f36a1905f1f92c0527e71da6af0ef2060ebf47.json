{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\RepProject\\\\Frontend\\\\resq-react\\\\src\\\\components\\\\Blog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TokenService from '../services/token.service';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Blog() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    fetchPosts();\n    fetchCategories();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      const token = TokenService.getLocalAccessToken();\n      const response = await fetch('http://localhost:8080/api/posts', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPosts(data);\n      } else {\n        console.error('Failed to fetch posts:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching posts:', error.message);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/categories');\n      if (response.ok) {\n        const data = await response.json();\n        setCategories(data);\n      } else {\n        console.error('Failed to fetch categories:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching categories:', error.message);\n    }\n  };\n\n  // CRUD Operations\n  const createCategory = async categoryData => {\n    try {\n      const token = TokenService.getLocalAccessToken();\n      const response = await fetch('http://localhost:8080/api/categories', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(categoryData)\n      });\n      if (response.ok) {\n        fetchCategories();\n      } else {\n        console.error('Failed to create category:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error creating category:', error.message);\n    }\n  };\n  const deleteCategory = async categoryId => {\n    try {\n      const token = TokenService.getLocalAccessToken();\n      const response = await fetch(`http://localhost:8080/api/categories/${categoryId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        fetchCategories();\n      } else {\n        console.error('Failed to delete category:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error deleting category:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-unstyled mb-0\",\n              children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: category.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteCategory(category.id),\n                  className: \"btn btn-danger btn-sm ml-2\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this)]\n              }, category.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => {\n                e.preventDefault();\n                const formData = new FormData(e.target);\n                const name = formData.get('name');\n                createCategory({\n                  name\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"name\",\n                  className: \"form-control\",\n                  placeholder: \"New category name\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(Blog, \"6cZY3P+kLf1uexI86HjMQk/AEpc=\");\n_c = Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","TokenService","Link","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","categories","setCategories","fetchPosts","fetchCategories","token","getLocalAccessToken","response","fetch","headers","ok","data","json","console","error","statusText","message","createCategory","categoryData","method","body","JSON","stringify","deleteCategory","categoryId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","category","name","onClick","id","onSubmit","e","preventDefault","formData","FormData","target","get","type","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Рабочий стол/RepProject/Frontend/resq-react/src/components/Blog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TokenService from '../services/token.service';\nimport { Link } from 'react-router-dom';\n\nexport default function Blog() {\n    const [posts, setPosts] = useState([]);\n    const [categories, setCategories] = useState([]);\n\n    useEffect(() => {\n        fetchPosts();\n        fetchCategories();\n    }, []);\n\n    const fetchPosts = async () => {\n        try {\n            const token = TokenService.getLocalAccessToken();\n            const response = await fetch('http://localhost:8080/api/posts', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                }\n            });\n            if (response.ok) {\n                const data = await response.json();\n                setPosts(data);\n            } else {\n                console.error('Failed to fetch posts:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Error fetching posts:', error.message);\n        }\n    };\n\n    const fetchCategories = async () => {\n        try {\n            const response = await fetch('http://localhost:8080/api/categories');\n            if (response.ok) {\n                const data = await response.json();\n                setCategories(data);\n            } else {\n                console.error('Failed to fetch categories:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Error fetching categories:', error.message);\n        }\n    };\n\n    // CRUD Operations\n    const createCategory = async (categoryData) => {\n        try {\n            const token = TokenService.getLocalAccessToken();\n            const response = await fetch('http://localhost:8080/api/categories', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(categoryData),\n            });\n            if (response.ok) {\n                fetchCategories();\n            } else {\n                console.error('Failed to create category:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Error creating category:', error.message);\n        }\n    };\n\n    const deleteCategory = async (categoryId) => {\n        try {\n            const token = TokenService.getLocalAccessToken();\n            const response = await fetch(`http://localhost:8080/api/categories/${categoryId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            if (response.ok) {\n                fetchCategories();\n            } else {\n                console.error('Failed to delete category:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Error deleting category:', error.message);\n        }\n    };\n\n    return (\n        <div>\n            {/* Your existing code */}\n            {/* ... */}\n\n            {/* Categories widget */}\n            <div className=\"card mb-4\">\n                <div className=\"card-header\">Categories</div>\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <ul className=\"list-unstyled mb-0\">\n                                {categories.map(category => (\n                                    <li key={category.id}>\n                                        <span>{category.name}</span>\n                                        <button onClick={() => deleteCategory(category.id)} className=\"btn btn-danger btn-sm ml-2\">Delete</button>\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                        {/* Add new category */}\n                        <div className=\"col-sm-6\">\n                            <form onSubmit={(e) => {\n                                e.preventDefault();\n                                const formData = new FormData(e.target);\n                                const name = formData.get('name');\n                                createCategory({ name });\n                            }}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"New category name\" required />\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\">Create</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}