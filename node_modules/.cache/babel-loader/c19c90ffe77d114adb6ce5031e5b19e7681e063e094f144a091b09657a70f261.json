{"ast":null,"code":"// api.js\nimport authHeader from '../services/auth-header';\nexport async function createCat(cat) {\n  const currentUser = AuthService.getCurrentUser();\n\n  // Check if the user is a moderator\n  if (!currentUser || !currentUser.roles || !currentUser.roles.includes('moderator')) {\n    throw new Error('User is not authorized to create categories');\n  }\n  try {\n    const response = await fetch('http://localhost:8080/api/categories', {\n      method: 'POST',\n      headers: {\n        ...authHeader(),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cat)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create category: ' + response.statusText);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Error creating category: ' + error.message);\n  }\n}","map":{"version":3,"names":["authHeader","createCat","cat","currentUser","AuthService","getCurrentUser","roles","includes","Error","response","fetch","method","headers","body","JSON","stringify","ok","statusText","data","json","error","message"],"sources":["C:/Users/Admin/OneDrive/Рабочий стол/masterFront/republicProject/src/components/CreateCategories.js"],"sourcesContent":["// api.js\r\nimport authHeader from '../services/auth-header';\r\n\r\nexport async function createCat(cat) {\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    // Check if the user is a moderator\r\n    if (!currentUser || !currentUser.roles || !currentUser.roles.includes('moderator')) {\r\n        throw new Error('User is not authorized to create categories');\r\n    }\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:8080/api/categories', {\r\n            method: 'POST',\r\n            headers: {\r\n                ...authHeader(),\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(cat),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Failed to create category: ' + response.statusText);\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error('Error creating category: ' + error.message);\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA,OAAOA,UAAU,MAAM,yBAAyB;AAEhD,OAAO,eAAeC,SAASA,CAACC,GAAG,EAAE;EACjC,MAAMC,WAAW,GAAGC,WAAW,CAACC,cAAc,CAAC,CAAC;;EAEhD;EACA,IAAI,CAACF,WAAW,IAAI,CAACA,WAAW,CAACG,KAAK,IAAI,CAACH,WAAW,CAACG,KAAK,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;IAChF,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EAEA,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,GAAGZ,UAAU,CAAC,CAAC;QACf,cAAc,EAAE;MACpB,CAAC;MACDa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,GAAG;IAC5B,CAAC,CAAC;IAEF,IAAI,CAACO,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIR,KAAK,CAAC,6BAA6B,GAAGC,QAAQ,CAACQ,UAAU,CAAC;IACxE;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAM,IAAIZ,KAAK,CAAC,2BAA2B,GAAGY,KAAK,CAACC,OAAO,CAAC;EAChE;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}