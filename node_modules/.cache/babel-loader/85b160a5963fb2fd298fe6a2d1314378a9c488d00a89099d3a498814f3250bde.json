{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\masterFront\\\\republicProject\\\\src\\\\components\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport { isEmail } from \"validator\";\nimport animalsImage from '../images/animals.png';\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RegistrationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        username,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      if (!username || !email || !password || !confirmPassword) {\n        this.setState({\n          error: \"Please fill all the fields\"\n        });\n        return;\n      }\n\n      // Password validation\n      const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[!@#$%^&*])(?=.*[a-zA-Z]).{8,}$/;\n      if (!passwordRegex.test(password)) {\n        this.setState({\n          error: \"Password must contain at least one digit, one lowercase letter, one special character, and be at least 8 characters long\"\n        });\n        return;\n      }\n\n      // Other validation checks\n      if (!username || !email || !password || !confirmPassword) {\n        this.setState({\n          error: \"All fields are required\"\n        });\n        return;\n      }\n      if (!isEmail(email)) {\n        this.setState({\n          error: \"Invalid email format\"\n        });\n        return;\n      }\n      if (password !== confirmPassword) {\n        this.setState({\n          error: \"Passwords do not match\"\n        });\n        return;\n      }\n      this.setState({\n        loading: true\n      });\n\n      // Make API call to register user\n      AuthService.register(username, email, password, confirmPassword).then(response => {\n        this.setState({\n          successMessage: response.data.message,\n          error: \"\",\n          loading: false\n        });\n      }).catch(error => {\n        this.setState({\n          error: error.response.data.message,\n          loading: false\n        });\n      });\n    };\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      error: \"\",\n      successMessage: \"\",\n      loading: false\n    };\n  }\n  render() {\n    const {\n      username,\n      email,\n      password,\n      confirmPassword,\n      error,\n      successMessage,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: animalsImage,\n          alt: \"Animals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), !successMessage && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              value: username,\n              onChange: this.handleChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: email,\n              onChange: this.handleChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: password,\n              onChange: this.handleChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"confirmPassword\",\n              value: confirmPassword,\n              onChange: this.handleChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'red'\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-block\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'green'\n          },\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RegistrationForm;","map":{"version":3,"names":["React","Component","isEmail","animalsImage","AuthService","jsxDEV","_jsxDEV","RegistrationForm","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","username","email","password","confirmPassword","state","error","passwordRegex","test","loading","register","then","response","successMessage","data","message","catch","render","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","style","color"],"sources":["C:/Users/Admin/OneDrive/Рабочий стол/masterFront/republicProject/src/components/Register.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { isEmail } from \"validator\";\r\nimport animalsImage from '../images/animals.png';\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nclass RegistrationForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      error: \"\",\r\n      successMessage: \"\",\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, email, password, confirmPassword } = this.state;\r\n\r\n    if (!username || !email || !password || !confirmPassword) {\r\n      this.setState({ error: \"Please fill all the fields\" });\r\n      return;\r\n    }\r\n\r\n    // Password validation\r\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[!@#$%^&*])(?=.*[a-zA-Z]).{8,}$/;\r\n    if (!passwordRegex.test(password)) {\r\n      this.setState({\r\n        error: \"Password must contain at least one digit, one lowercase letter, one special character, and be at least 8 characters long\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Other validation checks\r\n    if (!username || !email || !password || !confirmPassword) {\r\n      this.setState({ error: \"All fields are required\" });\r\n      return;\r\n    }\r\n\r\n    if (!isEmail(email)) {\r\n      this.setState({ error: \"Invalid email format\" });\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      this.setState({ error: \"Passwords do not match\" });\r\n      return;\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n\r\n    // Make API call to register user\r\n    AuthService.register(username, email, password, confirmPassword)\r\n      .then((response) => {\r\n        this.setState({\r\n          successMessage: response.data.message,\r\n          error: \"\",\r\n          loading: false\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: error.response.data.message, loading: false });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { username, email, password, confirmPassword, error, successMessage, loading } = this.state;\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img src={animalsImage} alt=\"Animals\" />\r\n\r\n          {!successMessage && (\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={this.handleChange}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={this.handleChange}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={this.handleChange}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  value={confirmPassword}\r\n                  onChange={this.handleChange}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n\r\n              {error && <div style={{ color: 'red' }}>{error}</div>}\r\n              {loading ? <div>Loading...</div> : <button className=\"btn btn-primary btn-block\">Sign Up</button>}\r\n            </form>\r\n          )}\r\n\r\n          {successMessage && <div style={{ color: 'green' }}>{successMessage}</div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}