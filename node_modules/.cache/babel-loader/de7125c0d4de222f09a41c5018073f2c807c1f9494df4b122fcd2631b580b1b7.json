{"ast":null,"code":"import api from \"./api\";\nimport TokenService from \"./token.service\";\nclass AuthService {\n  constructor() {\n    this.updateUser = user => {\n      if (localStorage.getItem(user.accessToken)) {\n        let auth = JSON.parse(localStorage.getItem(user.accessToken));\n        auth.user = user;\n        localStorage.setItem('jwt', JSON.stringify(auth));\n        next();\n      }\n    };\n  }\n  login(username, password) {\n    return api.post(\"/auth/signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        TokenService.setUser(response.data);\n      }\n      return response.data;\n    });\n  }\n  logout() {\n    TokenService.removeUser();\n  }\n  register(username, email, password, confirmPassword) {\n    return api.post(\"/auth/signup\", {\n      username,\n      email,\n      password,\n      confirmPassword\n    });\n  }\n  getCurrentUser() {\n    return TokenService.getUser();\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["api","TokenService","AuthService","constructor","updateUser","user","localStorage","getItem","accessToken","auth","JSON","parse","setItem","stringify","next","login","username","password","post","then","response","data","setUser","logout","removeUser","register","email","confirmPassword","getCurrentUser","getUser"],"sources":["C:/Users/Admin/OneDrive/Рабочий стол/masterFront/republicProject/src/services/auth.service.js"],"sourcesContent":["import api from \"./api\";\r\nimport TokenService from \"./token.service\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return api\r\n      .post(\"/auth/signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          TokenService.setUser(response.data);\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    TokenService.removeUser();\r\n  }\r\n\r\n  register(username, email, password, confirmPassword) {\r\n    return api.post(\"/auth/signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n      confirmPassword\r\n    });\r\n  }\r\n  \r\n\r\n  getCurrentUser() {\r\n    return TokenService.getUser();\r\n  }\r\n\r\n  updateUser = (user) =>{\r\n    if(localStorage.getItem(user.accessToken)){\r\n      let auth  = JSON.parse(localStorage.getItem(user.accessToken));\r\n      auth.user = user;\r\n      localStorage.setItem('jwt', JSON.stringify(auth));\r\n      next();\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default new AuthService();"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AACvB,OAAOC,YAAY,MAAM,iBAAiB;AAE1C,MAAMC,WAAW,CAAC;EAAAC,YAAA;IAAA,KAkChBC,UAAU,GAAIC,IAAI,IAAI;MACpB,IAAGC,YAAY,CAACC,OAAO,CAACF,IAAI,CAACG,WAAW,CAAC,EAAC;QACxC,IAAIC,IAAI,GAAIC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAACF,IAAI,CAACG,WAAW,CAAC,CAAC;QAC9DC,IAAI,CAACJ,IAAI,GAAGA,IAAI;QAChBC,YAAY,CAACM,OAAO,CAAC,KAAK,EAAEF,IAAI,CAACG,SAAS,CAACJ,IAAI,CAAC,CAAC;QACjDK,IAAI,CAAC,CAAC;MACR;IACF,CAAC;EAAA;EAxCDC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACxB,OAAOjB,GAAG,CACPkB,IAAI,CAAC,cAAc,EAAE;MACpBF,QAAQ;MACRC;IACF,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACb,WAAW,EAAE;QAC7BP,YAAY,CAACqB,OAAO,CAACF,QAAQ,CAACC,IAAI,CAAC;MACrC;MAEA,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACN;EAEAE,MAAMA,CAAA,EAAG;IACPtB,YAAY,CAACuB,UAAU,CAAC,CAAC;EAC3B;EAEAC,QAAQA,CAACT,QAAQ,EAAEU,KAAK,EAAET,QAAQ,EAAEU,eAAe,EAAE;IACnD,OAAO3B,GAAG,CAACkB,IAAI,CAAC,cAAc,EAAE;MAC9BF,QAAQ;MACRU,KAAK;MACLT,QAAQ;MACRU;IACF,CAAC,CAAC;EACJ;EAGAC,cAAcA,CAAA,EAAG;IACf,OAAO3B,YAAY,CAAC4B,OAAO,CAAC,CAAC;EAC/B;AAYF;AAEA,eAAe,IAAI3B,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}