{"ast":null,"code":"import axios from \"axios\";\nimport TokenService from \"./token.service\";\nconst instance = axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\ninstance.interceptors.request.use(async config => {\n  const token = TokenService.getLocalAccessToken();\n  if (token) {\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\ninstance.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  const originalConfig = error.config;\n  if (error.response.status === 401 && !originalConfig._retry) {\n    originalConfig._retry = true;\n    try {\n      const rs = await instance.post(\"/auth/refreshtoken\", {\n        refreshToken: TokenService.getLocalRefreshToken()\n      });\n      const {\n        accessToken\n      } = rs.data;\n      TokenService.updateLocalAccessToken(accessToken);\n\n      // Retry original request with new token\n      originalConfig.headers[\"Authorization\"] = `Bearer ${accessToken}`;\n      return instance(originalConfig);\n    } catch (_error) {\n      return Promise.reject(_error);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","TokenService","instance","create","baseURL","headers","interceptors","request","use","config","token","getLocalAccessToken","error","Promise","reject","response","originalConfig","status","_retry","rs","post","refreshToken","getLocalRefreshToken","accessToken","data","updateLocalAccessToken","_error"],"sources":["C:/Users/Admin/OneDrive/Рабочий стол/masterFront/republicProject/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\nimport TokenService from \"./token.service\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:8080/api\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    async (config) => {\r\n        const token = TokenService.getLocalAccessToken();\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    async (error) => {\r\n        const originalConfig = error.config;\r\n\r\n        if (error.response.status === 401 && !originalConfig._retry) {\r\n            originalConfig._retry = true;\r\n            try {\r\n                const rs = await instance.post(\"/auth/refreshtoken\", {\r\n                    refreshToken: TokenService.getLocalRefreshToken(),\r\n                });\r\n\r\n                const { accessToken } = rs.data;\r\n                TokenService.updateLocalAccessToken(accessToken);\r\n\r\n                // Retry original request with new token\r\n                originalConfig.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n                return instance(originalConfig);\r\n            } catch (_error) {\r\n                return Promise.reject(_error);\r\n            }\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,iBAAiB;AAE1C,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC1BC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEFH,QAAQ,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7B,MAAOC,MAAM,IAAK;EACd,MAAMC,KAAK,GAAGT,YAAY,CAACU,mBAAmB,CAAC,CAAC;EAChD,IAAID,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAI,UAASK,KAAM,EAAC;EACvD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAG,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAEDV,QAAQ,CAACI,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC7BO,QAAQ,IAAK;EACV,OAAOA,QAAQ;AACnB,CAAC,EACD,MAAOH,KAAK,IAAK;EACb,MAAMI,cAAc,GAAGJ,KAAK,CAACH,MAAM;EAEnC,IAAIG,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAI,CAACD,cAAc,CAACE,MAAM,EAAE;IACzDF,cAAc,CAACE,MAAM,GAAG,IAAI;IAC5B,IAAI;MACA,MAAMC,EAAE,GAAG,MAAMjB,QAAQ,CAACkB,IAAI,CAAC,oBAAoB,EAAE;QACjDC,YAAY,EAAEpB,YAAY,CAACqB,oBAAoB,CAAC;MACpD,CAAC,CAAC;MAEF,MAAM;QAAEC;MAAY,CAAC,GAAGJ,EAAE,CAACK,IAAI;MAC/BvB,YAAY,CAACwB,sBAAsB,CAACF,WAAW,CAAC;;MAEhD;MACAP,cAAc,CAACX,OAAO,CAAC,eAAe,CAAC,GAAI,UAASkB,WAAY,EAAC;MACjE,OAAOrB,QAAQ,CAACc,cAAc,CAAC;IACnC,CAAC,CAAC,OAAOU,MAAM,EAAE;MACb,OAAOb,OAAO,CAACC,MAAM,CAACY,MAAM,CAAC;IACjC;EACJ;EACA,OAAOb,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeV,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}