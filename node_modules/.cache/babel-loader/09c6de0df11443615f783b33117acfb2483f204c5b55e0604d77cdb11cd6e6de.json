{"ast":null,"code":"import api from \"./api\";\nimport TokenService from \"./token.service\";\nclass AuthService {\n  login(username, password) {\n    return api.post(\"/auth/signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        // Store user data including token in TokenService\n        TokenService.setUser(response.data);\n      }\n      return response.data;\n    });\n  }\n  logout() {\n    TokenService.removeUser();\n  }\n  register(username, email, password, confirmPassword) {\n    return api.post(\"/auth/signup\", {\n      username,\n      email,\n      password,\n      confirmPassword\n    });\n  }\n  getCurrentUser() {\n    // Get user data including token from TokenService\n    return TokenService.getUser();\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["api","TokenService","AuthService","login","username","password","post","then","response","data","accessToken","setUser","logout","removeUser","register","email","confirmPassword","getCurrentUser","getUser"],"sources":["C:/Users/Admin/OneDrive/Рабочий стол/masterFront/republicProject/src/services/auth.service.js"],"sourcesContent":["import api from \"./api\";\r\nimport TokenService from \"./token.service\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return api\r\n      .post(\"/auth/signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          // Store user data including token in TokenService\r\n          TokenService.setUser(response.data);\r\n        }\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    TokenService.removeUser();\r\n  }\r\n\r\n  register(username, email, password, confirmPassword) {\r\n    return api.post(\"/auth/signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n      confirmPassword\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    // Get user data including token from TokenService\r\n    return TokenService.getUser();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AACvB,OAAOC,YAAY,MAAM,iBAAiB;AAE1C,MAAMC,WAAW,CAAC;EAChBC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACxB,OAAOL,GAAG,CACPM,IAAI,CAAC,cAAc,EAAE;MACpBF,QAAQ;MACRC;IACF,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;QAC7B;QACAT,YAAY,CAACU,OAAO,CAACH,QAAQ,CAACC,IAAI,CAAC;MACrC;MACA,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACN;EAEAG,MAAMA,CAAA,EAAG;IACPX,YAAY,CAACY,UAAU,CAAC,CAAC;EAC3B;EAEAC,QAAQA,CAACV,QAAQ,EAAEW,KAAK,EAAEV,QAAQ,EAAEW,eAAe,EAAE;IACnD,OAAOhB,GAAG,CAACM,IAAI,CAAC,cAAc,EAAE;MAC9BF,QAAQ;MACRW,KAAK;MACLV,QAAQ;MACRW;IACF,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAAA,EAAG;IACf;IACA,OAAOhB,YAAY,CAACiB,OAAO,CAAC,CAAC;EAC/B;AACF;AAEA,eAAe,IAAIhB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}