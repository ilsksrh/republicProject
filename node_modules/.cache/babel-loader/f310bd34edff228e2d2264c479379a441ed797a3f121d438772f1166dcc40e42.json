{"ast":null,"code":"import api from \"./api\";\nimport TokenService from \"./token.service\";\nclass AuthService {\n  login(username, password) {\n    return api.post(\"/auth/signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        TokenService.setUser(response.data);\n      }\n      return response.data;\n    });\n  }\n  logout() {\n    TokenService.removeUser();\n  }\n  register(username, email, password, confirmPassword) {\n    return api.post(\"/auth/signup\", {\n      username,\n      email,\n      password,\n      confirmPassword\n    });\n  }\n  getCurrentUser() {\n    return TokenService.getUser();\n  }\n  updateUserProfile(user) {\n    return api.put(\"/users/profile\", user, {\n      headers: {\n        Authorization: `Bearer ${TokenService.getLocalAccessToken()}`\n      }\n    }).then(response => {\n      if (response.data.accessToken) {\n        TokenService.updateLocalAccessToken(response.data.accessToken);\n      }\n      // Update user data in local storage\n      TokenService.setUser(response.data);\n      return response.data;\n    });\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["api","TokenService","AuthService","login","username","password","post","then","response","data","accessToken","setUser","logout","removeUser","register","email","confirmPassword","getCurrentUser","getUser","updateUserProfile","user","put","headers","Authorization","getLocalAccessToken","updateLocalAccessToken"],"sources":["C:/Users/Admin/OneDrive/Рабочий стол/masterFront/republicProject/src/services/auth.service.js"],"sourcesContent":["import api from \"./api\";\r\nimport TokenService from \"./token.service\";\r\n\r\nclass AuthService {\r\n    login(username, password) {\r\n        return api\r\n            .post(\"/auth/signin\", {\r\n                username,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    TokenService.setUser(response.data);\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        TokenService.removeUser();\r\n    }\r\n\r\n    register(username, email, password, confirmPassword) {\r\n        return api.post(\"/auth/signup\", {\r\n            username,\r\n            email,\r\n            password,\r\n            confirmPassword\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return TokenService.getUser();\r\n    }\r\n    \r\n    updateUserProfile(user) {\r\n      return api.put(\"/users/profile\", user, {\r\n        headers: {\r\n          Authorization: `Bearer ${TokenService.getLocalAccessToken()}`\r\n        }\r\n      }).then(response => {\r\n        if (response.data.accessToken) {\r\n          TokenService.updateLocalAccessToken(response.data.accessToken);\r\n        }\r\n        // Update user data in local storage\r\n        TokenService.setUser(response.data);\r\n        return response.data;\r\n      });\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AACvB,OAAOC,YAAY,MAAM,iBAAiB;AAE1C,MAAMC,WAAW,CAAC;EACdC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACtB,OAAOL,GAAG,CACLM,IAAI,CAAC,cAAc,EAAE;MAClBF,QAAQ;MACRC;IACJ,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;QAC3BT,YAAY,CAACU,OAAO,CAACH,QAAQ,CAACC,IAAI,CAAC;MACvC;MAEA,OAAOD,QAAQ,CAACC,IAAI;IACxB,CAAC,CAAC;EACV;EAEAG,MAAMA,CAAA,EAAG;IACLX,YAAY,CAACY,UAAU,CAAC,CAAC;EAC7B;EAEAC,QAAQA,CAACV,QAAQ,EAAEW,KAAK,EAAEV,QAAQ,EAAEW,eAAe,EAAE;IACjD,OAAOhB,GAAG,CAACM,IAAI,CAAC,cAAc,EAAE;MAC5BF,QAAQ;MACRW,KAAK;MACLV,QAAQ;MACRW;IACJ,CAAC,CAAC;EACN;EAEAC,cAAcA,CAAA,EAAG;IACb,OAAOhB,YAAY,CAACiB,OAAO,CAAC,CAAC;EACjC;EAEAC,iBAAiBA,CAACC,IAAI,EAAE;IACtB,OAAOpB,GAAG,CAACqB,GAAG,CAAC,gBAAgB,EAAED,IAAI,EAAE;MACrCE,OAAO,EAAE;QACPC,aAAa,EAAG,UAAStB,YAAY,CAACuB,mBAAmB,CAAC,CAAE;MAC9D;IACF,CAAC,CAAC,CAACjB,IAAI,CAACC,QAAQ,IAAI;MAClB,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;QAC7BT,YAAY,CAACwB,sBAAsB,CAACjB,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAC;MAChE;MACA;MACAT,YAAY,CAACU,OAAO,CAACH,QAAQ,CAACC,IAAI,CAAC;MACnC,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACJ;AACJ;AAEA,eAAe,IAAIP,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}